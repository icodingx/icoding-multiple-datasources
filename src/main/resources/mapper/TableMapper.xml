<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icoding.datasource.mapper.TableMapper">

	<resultMap type="Table" id="TableResult">
	    <id     property="tableId"        column="table_id"        />
		<result property="tableName"      column="table_name"      />
		<result property="tableComment"   column="table_comment"   />
	</resultMap>
	
	<resultMap type="TableColumn" id="TableColumnResult">
        <result property="columnName"     column="column_name"    />
        <result property="columnComment"  column="column_comment" />
        <result property="columnType"     column="column_type"    />
        <result property="isPk"           column="is_pk"          />
        <result property="isIncrement"    column="is_increment"   />
        <result property="isRequired"     column="is_required"    />
    </resultMap>

	<select id="selectMySQLTables" parameterType="String" resultMap="TableResult">
		SELECT table_name, table_comment
		  FROM information_schema.tables
		 WHERE table_schema = (select database())
		   AND table_name NOT LIKE 'qrtz_%' AND table_name NOT LIKE 'gen_%'
		   AND table_name NOT IN (select table_name from gen_table)
		<if test="keyword != null and keyword != ''">
		   AND (table_name like concat('%', #{keyword}, '%') OR table_comment like concat('%', #{keyword}, '%'))
		</if>
	</select>
    <select id="selectMySQLTableColumns" parameterType="String" resultMap="TableColumnResult">
		SELECT column_name, column_type, column_comment, 
		(case when column_key = 'PRI' then '1' else '0' end) as is_pk, 
		(case when (is_nullable = 'no' <![CDATA[ && ]]> column_key != 'PRI') then '1' else null end) as is_required, 
		(case when extra = 'auto_increment' then '1' else '0' end) as is_increment
		  FROM information_schema.columns 
		 WHERE table_schema = (select database()) and table_name = (#{tableName})
		 ORDER BY ordinal_position
	</select>

	<select id="selectSQLServerTables" parameterType="String" resultMap="TableResult">
		SELECT cast(D.NAME as nvarchar) as table_name,cast(F.VALUE as nvarchar) as table_comment
		  FROM SYSOBJECTS D LEFT JOIN SYS.EXTENDED_PROPERTIES F ON D.ID=F.MAJOR_ID
		 WHERE D.XTYPE IN ('U','V') AND D.NAME!='DTPROPERTIES' 
		<if test="keyword != null and keyword != ''">
			AND ((cast(D.NAME as nvarchar) like '%'+#{keyword}+ '%') OR (cast(F.VALUE as nvarchar) like '%'+#{keyword}+ '%'))
		</if>
	</select>
	<select id="selectSQLServerTableColumns" parameterType="String" resultMap="TableColumnResult">
		SELECT
		    cast(A.NAME as nvarchar) as column_name,
		    cast(B.NAME as nvarchar) as column_type,
		    cast(G.[VALUE] as nvarchar) as column_comment,
		    (SELECT 1  FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE Z WHERE TABLE_NAME=D.NAME and A.NAME = Z.column_name  ) as is_pk
		  FROM SYSCOLUMNS A
		    LEFT JOIN SYSTYPES B ON A.XTYPE=B.XUSERTYPE
		    INNER JOIN SYSOBJECTS D ON A.ID=D.ID AND D.XTYPE='U' AND D.NAME!='DTPROPERTIES'
		    LEFT JOIN SYS.EXTENDED_PROPERTIES G ON A.ID=G.MAJOR_ID AND A.COLID=G.MINOR_ID
		    LEFT JOIN SYS.EXTENDED_PROPERTIES F ON D.ID=F.MAJOR_ID AND F.MINOR_ID   =0
		 WHERE D.NAME = #{tableName}
		 ORDER BY A.COLORDER
	</select>

	<select id="isExistSQLServerDataTable" resultType="Integer">
		select 1 from sysobjects where id = object_id('form_data') and type = 'U'
	</select>
	<update id="createSQLServerDataTable">
		IF NOT EXISTS (SELECT 1 FROM sysobjects WHERE name='form_data' and xtype='U')
		create table form_data (
		   id                   varchar(50)          not null,
		   user_code            varchar(50)          not null,
		   form_name            varchar(50)          not null,
		   form_data            varchar(8000)        not null,
		   create_time          date                 null,
		   constraint PK_FORM_DATA primary key (id)
		)
	</update>
	<insert id="insertSQLServerFormXMLData" parameterType="map" useGeneratedKeys="false">
		insert into form_data(id, user_code,form_name,form_data,create_time) values(#{id}, #{user_code},#{form_name},#{form_data},getdate())
	</insert>
	<update id="updateSQLServerFormXMLData" parameterType="map">
		update form_data 
		<set>
 			<if test="user_code != null and user_code != ''">user_code = #{user_code},</if>
 			<if test="form_name != null and form_name != ''">form_name = #{form_name},</if>
 			<if test="form_data != null and form_data != ''">form_data = #{form_data},</if>
 			create_time = getdate()
 		</set>
 		where id = #{id}
	</update>
	<select id="checkSQLServerFormXMLData" resultType="Integer">
		select 1 from form_data where id=#{uuid}
	</select>

	<insert id="insertMySQLFormData" parameterType="map">
		insert into biz_form_data(pid,user_code,form_name,form_data,create_time) values(#{pid},#{user_code},#{form_name},#{form_data,typeHandler=com.icoding.common.mybatis.typehandler.JSONTypeHandler},sysdate())
	</insert>
	<update id="updateMySQLFormData" parameterType="map">
		update biz_form_data 
		<set>
 			<if test="pid != null and pid != ''">pid = #{pid},</if>
 			<if test="user_code != null and user_code != ''">user_code = #{user_code},</if>
 			<if test="form_name != null and form_name != ''">form_name = #{form_name},</if>
 			<if test="form_data != null and form_data != ''">form_data = #{form_data,typeHandler=com.icoding.common.mybatis.typehandler.JSONTypeHandler},</if>
 			create_time = sysdate()
 		</set>
 		where id = #{id}
	</update>
	<delete id="deleteMySQLFormData" parameterType="map">
		delete from biz_form_data where form_name=#{form_name} and JSON_EXTRACT(form_data, '$.${pname}')=${pvalue}
	</delete>
</mapper> 